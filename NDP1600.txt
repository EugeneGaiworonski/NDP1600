{$CODEPAGE CP866}
+-----+-----------+--------------+---------------------------------------------+
| КОД | МНЕМОНИКА | НАИМЕНОВАНИЕ | СОДЕРЖАНИЕ                                  |
+-----+-----------+--------------+---------------------------------------------+
|  0  | NOOP      | НЕТ ОПЕРАЦИИ | Пустая операция                             |
|     |           |              | 0000                                        |
+-----+-----------+--------------+---------------------------------------------+
|  1  | COPY      | КОПИРОВАТЬ   | Слово по адресу op1 копируется в слово      |
|     |           |              | по адресу op3, op2 игнорируется             |
|     |           |              | 1A0F COPY 0A 0F * [0F]=[0A]                 |
+-----+-----------+--------------+---------------------------------------------+
|  2  | IADD      | СЛОЖИТЬ      | Целочисленное знаковое сложение             |
|     |           |              | [op3]=[op1]+[op2], w-признак выставляется   |
|     |           |              | по значению [op3]                           |
|     |           |              | 2AFA IADD 0A 0F 0A * [0A]=[0A]+[0F]         |
+-----+-----------+--------------+---------------------------------------------+
|  3  | ISUB      | ВЫЧЕСТЬ      | Целочисленное знаковое вычитание            |
|     |           |              | [op3]=[op1]-[op2], w-признак выставляется   |
|     |           |              | по значению [op3]                           |
|     |           |              | 3AFA ISUB 0A 0F 0A * [0A]=[0A]-[0F]         |
+-----+-----------+--------------+---------------------------------------------+
|  4  | IMPY      | УМНОЖИТЬ     | Целочисленное знаковое умножение            |
|     |           |              | [op3]=[op1]*[op2], w-признак выставляется   |
|     |           |              | по значению [op3]                           |
|     |           |              | 4AFA IMPY 0A 0F 0A * [0A]=[0A]*[0F]         |
+-----+-----------+--------------+---------------------------------------------+
|     |           |              |                                             |


5
IDIV
ДЕЛИТЬ С ОСТАТКОМ
Целочисленное знаковое деление [op3]=[op1]div[op2], w-признак выставляется
по значению [op3]

6	IMOD	ВЗЯТЬ ОСТАТОК ОТ ДЕЛЕНИЯ
Целочисленное знаковое деление [op3]=[op1]mod[op2], w-признак выставляется
по значению [op3]

7	TRA	ПЕРЕЙТИ
Безусловный переход по адресу op3, значения op1 и op2 игнорируются

8	TRC	ПЕРЕЙТИ ПО w
Переход по адресу op1 при w = 0, op2 -  при w = 1, op3 - при w = 2

9	TRAS	ПЕРЕЙТИ К ПОДПРОГРАММЕ
Вызов подпрограммы по адресу op3, адрес возврата сохраняется в [01]

A	TRСS	ПЕРЕЙТИ К ПОДПРОГРАММЕ ПО w
Вызов подпрограммы по адресу op3, условие перехода задается в op2,
равным: 0 -  при w = 0, 1 -  при w = 1, 2 - при w = 2, адрес возврата
сохраняется в [01]

B	RETS	ВЕРНУТЬСЯ ИЗ ПОДПРОГРАММЫ
Возврат из подпрограммы, адрес возврата берется из [01]

C	RST	    ОЧИСТИТЬ ПРИЗНАКИ
w-признак и признак переполнения выставляются в 0

D READ    ЧИТАТЬ С УСТРОЙСТВА
Device 1, Qty 2, Addr 3

F	STOP	ОСТАНОВИТЬ ВЫПОЛНЕНИЕ
Прекращение выполнения программы

